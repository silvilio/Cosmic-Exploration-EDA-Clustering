
#-------------------- LIBRER√çAS NECESARIAS-------------------------#

#Librer√≠as fundamentales

import streamlit as st
import numpy as np
import pandas as pd

#Librer√≠as de visualizaci√≥n
import matplotlib.pyplot as plt
import plotly_express as px
import plotly.graph_objects as go
import seaborn as sns
from matplotlib.image import imread
import matplotlib.image as mpimg

#Librer√≠as de mapas
import folium 

#Librer√≠as t√©cnicas
import base64
from streamlit_option_menu import option_menu
from PIL import Image
import os
from folium.plugins import MarkerCluster
from IPython.display import IFrame

from pydantic import class_validators

from scipy.stats import chi2_contingency



#---------------------------- COSAS QUE PODEMOS USAR EN TODA NUESTRA APP ----------------------------

# Importamos los 3 datasets del proyecto
df_meteorites = pd.read_csv("datasets proyecto final/meteorite-landings.csv")
df_exo = pd.read_csv("datasets proyecto final/all_exoplanets_2021.csv")

#------------------ CONFIGURACI√ìN DE P√ÅGINA ----------------

st.set_page_config(page_title="COSMIC EXPLORATION",
        layout="centered",
        page_icon="üè†",
        )



# Creo una hoja de estilo para toda la p√°gina
st.markdown(
    f"""
    <style>
    [data-testid="stHeader"] {{
    background-color: rgba(0, 0, 0, 0);
    }}
    [data-testid="stSidebar"]{{                 
    background-color: rgba(0, 0, 0, 0);
    border: 0.5px solid #ff4b4b;
        }}
    [data-testid="stMarkdownContainer"]{{                 
    color: #d9ad26;
    text-align: center;
    font-size: 35px;
        }}

    [data-testid="stMarkdownContainer"] {{
    background-color: rgba(0, 0, 0, 0);
    }}

    .stMetric {{
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    }}

    .menu .nav-item .nav-link.active[data-v-4323f8ce] {{
    background-color: #dddad;
    }}


    table {{
        border-collapse: collapse;
        width: 60%;
    }}

    th {{
    background-color: #d9ad26;
    color: black;
    text-align: left;
    padding: 8px;
    }}

    td {{
    background-color: white;
    color: black;
    text-align: left;
    padding: 8px;
    border-bottom: 1px solid #ddd;
    }}


    </style>
    """
 , unsafe_allow_html=True)



#Establecemos la imagen de fondo de la app
def add_bg_from_local(image_file):
    with open(image_file, "rb") as image_file:
        encoded_string = base64.b64encode(image_file.read())
    st.markdown(
    f"""
     <style>
        .stApp {{
        background-image: url(data:image/{"png"};base64,{encoded_string.decode()});
        background-size: cover
    }}
    </style>
    """,
    unsafe_allow_html=True
    )
add_bg_from_local(r"imagenes/background5.png")

# Esto sirve para quitar la advertencia de algunos gr√°ficos
st.set_option('deprecation.showPyplotGlobalUse', False)




#### MEN√ö ####
menu = option_menu(None, ["Introduction", "Meteorites",  "Exoplanets", 'Space Missions'], 
    #icons=['house', 'cloud-upload', "list-task", 'gear'], 
    menu_icon="cast", default_index=0, orientation="horizontal",
    styles={
        "container": {
            "padding": "0!important", 
            "background-image": "url('https://graficareal.pe/wp-content/uploads/2019/03/8.CMYKDORADO-1024x724.jpg')",
            "background-size": "cover",
            "border-radius": "0px"
        },

        #"container": {"padding": "0!important", "background-color": "#a87b05", "border-radius": "0px"},
        "icon": {"color": "white", "font-size": "25px"}, 
        "nav-link": {"font-size": "18px", "text-align": "center", "margin":"3px", "--hover-color": "#333", "transition": "background-color 0.2s ease","color": "black", "font-weight": "bold"},
        "nav-link-selected": {"background-color": "#333", "color": "white"},
    }
)


# _______________________________________________________________________________


if menu == "Introduction":



    st.title("Meteoritos, misiones espaciales y exoplanetas: un viaje basado en datos")

    st.markdown("<p>&nbsp;</p>", unsafe_allow_html=True)


    st.image("imagenes/periodico.png")
    st.markdown("<p>&nbsp;</p>", unsafe_allow_html=True)

    st.markdown(
        """
        <div style='font-size: 20px; color: #d9ad26; font-family: Cabin, sans-serif; font-weight: bold; text-align: center;'>
        "¬øY si este titular es m√°s real de lo que pensamos? ¬øSe puede salvar a la humanidad con datos?"
        """, unsafe_allow_html=True)

    
    # Separaci√≥n
    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea
    

    st.markdown(
        """
        <div style='font-size: 18px; color: #ffffff; font-family: Cabin, sans-serif; font-weight: normal; text-align: left;'>
        En este proyecto...
        """, unsafe_allow_html=True)
    st.markdown("<p>&nbsp;</p>", unsafe_allow_html=True)
    st.markdown(
        """
        <div style='font-size: 14px; color: #ffffff; font-family: Cabin, sans-serif; font-weight: bold; text-align: center;'>
        Analizaremos un conjunto de datos sobre meteoritos, donde resolveremos cuestiones como:
        """, unsafe_allow_html=True)

    st.caption("""
        - ¬øQu√© masa media tienen los meteoritos que hemos registrado?
        - ¬øEn qu√© a√±os se registraron m√°s meteoritos?
        - ¬øD√≥nde han ca√≠do los meteoritos? ¬øEn qu√© hemisferio se han registrado m√°s? 
        """)

    st.markdown("<p>&nbsp;</p>", unsafe_allow_html=True)

    st.markdown(
        """
        <div style='font-size: 14px; color: #ffffff; font-family: Cabin, sans-serif; font-weight: bold; text-align: center;'>
        Analizaremos un conjunto de datos sobre exoplanetas, donde resolveremos cuestiones como:
        """, unsafe_allow_html=True)

    st.caption("""
        - ¬øEn qu√© a√±os se descubrieron m√°s exoplanetas? ¬øCu√°ndo fue el primero?
        - ¬øCu√°l es el m√©todo m√°s efectivo para encontrarlos?
        - ¬øCu√°l es el centro de descubrimiento m√°s importante?
        """)
    
    st.markdown("<p>&nbsp;</p>", unsafe_allow_html=True)

    st.markdown(
        """
        <div style='font-size: 14px; color: #ffffff; font-family: Cabin, sans-serif; font-weight: bold; text-align: center;'>
        Analizaremos un conjunto de datos sobre todas las misiones espaciales, donde resolveremos cuestiones como:
        """, unsafe_allow_html=True)

    st.caption("""
        - ¬øQu√© porcentaje de misiones espaciales ha sido un √©xito y cu√°l es la tasa de fracaso?
        - ¬øQu√© pa√≠ses han mandado m√°s misiones espaciales?
        - ¬øCu√°l es la compa√±√≠a con mejor porcentaje de √©xito?
        """)
    
    # Separaci√≥n
    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea
    

    st.markdown(
        """
        <div style='font-size: 18px; color: #ffffff; font-family: Cabin, sans-serif; font-weight: normal; text-align: left;'>
        El objetivo de este proyecto ser√° analizar estos tres conjuntos de datos para estudiar el peligro de impacto por parte de los
        meteoritos y encontrar patrones de comportamiento. Por otro lado, se analizar√°n los exoplanetas que nos puedan alojar en un futuro.
        Y terminaremos analizando las misiones espaciales para encontrar los par√°metros que han cosechado mejor √©xito en las misiones.
        """, unsafe_allow_html=True)
    st.markdown("<p>&nbsp;</p>", unsafe_allow_html=True)


if menu == "Meteorites":    


    ##PREPROCESAMIENTO DENTRO DE METEORITES
    #Creo dos variables para filtrar el dataset y poder representar mejor las masas de los meteoritos
    meteoritos_peque√±os = df_meteorites[df_meteorites['mass'] < 100]
    meteoritos_gigantes = df_meteorites[df_meteorites['mass'] > 2000000]

    #Filtrado para el dataframe del top 5 de meteoritos
    top_5_mass = df_meteorites.nlargest(5, "mass")
    top_5_mass = top_5_mass.dropna()
    top_5_mass = top_5_mass[~top_5_mass.isin([np.inf, -np.inf]).any(1)]
    top_5_mass["mass"] = top_5_mass["mass"].astype(int)
    top_5_mass["year"] = top_5_mass["year"].astype(int)

    #Filtrado para el histograma del tiempo
    data_1500_2020 = df_meteorites[(df_meteorites["year"] >= 1930) & (df_meteorites["year"] <= 2012)]




    #Ponemos dos columnas para datos generales
    col1, col2= st.columns(2)
    with col1:
        st.subheader("Meteoritos registrados hasta ahora:")
        metric_value = "45.716"
        st.markdown(f"""
            <div class="stMetric">
                {metric_value}
            </div>
        """, unsafe_allow_html=True)

    with col2:
        st.subheader("Toneladas de materia extraterrestre:")
        metric_value = "605.2"
        st.markdown(f"""
            <div class="stMetric">
                {metric_value}
            </div>
        """, unsafe_allow_html=True)
    

    # Separaci√≥n
    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea
    st.markdown("<p>&nbsp;</p>", unsafe_allow_html=True)

    #Ponemos el dataframe para poder investigarlo
    st.subheader("Dataframe Meteoritos")
    st.dataframe(df_meteorites)

    # Separaci√≥n
    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea


    # st.markdown(
    #     """
    #     <div style='font-size: 22px; color: #ffffff; font-family: Cabin, sans-serif; font-weight: bold; text-align: center;'>
    #     Correlaci√≥n de variables
    #     """, unsafe_allow_html=True)
    st.subheader("Correlaci√≥n de variables")

    # Gr√°fica correlaci√≥n
    # Spearman sirve para comprobar la relaci√≥n lineal entre dos variables.
    corr = df_meteorites.corr(method = 'spearman').sort_values(by = 'id', axis = 0, ascending = False).sort_values(by = 'id', axis = 1, ascending = False).round(1)
    # Generate a mask for the upper triangle
    mask = np.triu(np.ones_like(corr, dtype=bool))
    # Set up the matplotlib figure
    f, ax = plt.subplots(figsize=(10,7))
    f.set_facecolor((0, 0, 0, 0))  # color transparente
    cmap = "coolwarm"
    img = imread(r"imagenes/pexels-pixabay-220201.jpg")
    # Draw the heatmap with the mask and correct aspect ratio
    sns.heatmap(corr.iloc[0:5,0:5], mask=mask[0:5,0:5], cmap=cmap, vmax=1, center=0,
        square=True ,linewidths=.1, linecolor="black", cbar_kws={"shrink": 0.9},annot = True, annot_kws={"size": 10})
    cbar = ax.collections[0].colorbar
    cbar.set_ticks([-1,0,1])
    cbar.set_ticklabels(["-1","0","1"])
    for t in cbar.ax.get_yticklabels():
        t.set_color("white")
    ax.tick_params(axis='x', labelcolor='white')
    ax.set_xticklabels(ax.get_xticklabels(),fontsize=10 , color='white', rotation= 0)  # Variables blancas
    ax.set_yticklabels(ax.get_yticklabels(),fontsize=10 , color='white')  # Variables blancas
    plt.imshow(img, zorder=0, extent=[0, 6, 0, 5], origin="lower")

    st.pyplot(f)

    # Comentario matriz de correlaci√≥n
    st.caption("""
    Se ha usado la matriz de correlaci√≥n de tipo Spearman para analizar la correlaci√≥n de las variables del dataset. Sin embargo,
    despu√©s de analizarlo no encontr√© ninguna relaci√≥n apreciable en los datos.
    """)

    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) #L√≠nea


    st.subheader("¬øQu√© masa tienen los meteoritos que caen en nuestro planeta?")

    fig = px.histogram(meteoritos_peque√±os, x='mass', nbins=50, height=400)
    fig.update_layout(
    paper_bgcolor='rgba(0,0,0,0)',
    plot_bgcolor='rgba(0,0,0,0)',
    barmode="overlay",
    bargap=0.1,
    bargroupgap=0.2,
    )
    fig.update_xaxes(
    tickvals = list(range(0, 100, 10)),
    ticktext = list(range(0, 100, 10))
    )

    # Cambiamos el color de las barras
    for i in range(len(fig.data)):
        fig.data[i].marker.color = "#d9ad26"
        fig.data[i].marker.line.width = 1
        fig.data[i].marker.line.color = "#d9ad26"
    
    
    st.plotly_chart(fig)
    # Comentario masa meteoritos
    st.caption("""
    Se puede observar en este histograma la distribuci√≥n de la masa de los meteoritos. Seg√∫n los datos, la gran mayor√≠a
    de los meteoritos son polvo estelar al atravesar la atmosfera, contando con unas pocas decenas de gramos. Esta representaci√≥n
    est√° filtrada de 0 a 100 gr.
    """)

    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) #L√≠nea


    #Imagen de viol√≠n para la distribuci√≥n de la masa
    st.markdown("""
    <style>
    img {display: block; margin-left: 10px; margin-right:auto; width: 900px;}
    </style> """, unsafe_allow_html=True)
    st.image("imagenes/newplot.png")
    st.caption("""
    Con este gr√°fico de viol√≠n podemos observar la verdadera relaci√≥n de todo el espectro de la distribuci√≥n de los meteoritos seg√∫n su masa.
    Aunque se pueden observar algunos meteoritos con toneladas, podemos observar que son casos aislados. La gran mayor√≠a de ellos
    no supera el kilogramo de masa.
    """)


    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) #L√≠nea

    
    #Top 5 meteoritos
    st.subheader("¬øCu√°les son los 5 meteoritos m√°s grandes que hay registrados?")
    st.dataframe(top_5_mass)
    st.caption("""
    Podemos obsevar a ra√≠z de este dataframe el top 5 de los meteoritos m√°s grandes que tenemos registrados.
    Hoba, el meteorito m√°s extraordinario del mundo fue descubierto al norte de Namibia, en √Åfrica. 
    """)


    st.markdown("""
    <style>
    img {display: block; margin-left: 10px; margin-right:auto; width: 680px;}
    </style> """, unsafe_allow_html=True)
    st.image("imagenes/hoba.PNG")
    

    if st.button("P√≠ldoras de informaci√≥n"): 
        st.caption("""
        - Un asteroide y un meteorito no son lo mismo. Un asteroide es un objeto rocoso o met√°lico que se
            encuentra en el espacio y gira alrededor del sol. Mientras que el meteorito es un asteroide que ha entrado
            en la atm√≥sfera de la Tierra y ha alcanzado la superficie.
        - El meteorito que se cree que provoc√≥ la extinci√≥n de los dinosaurios tuvo unas dimensiones estimadas
            de 10 a 15km. Su masa podr√≠a haber sido de miles de millones de toneladas.
        - El meteorito m√°s grande que ha ca√≠do en espa√±a tiene 162kg de masa, lo que equivaldr√≠a a 30 cm de di√°metro.
        """)




    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) #L√≠nea


    st.subheader("¬øEn qu√© a√±os se han descubiertos m√°s meteoritos?")
    #Histograma de descubrimientos
    fig3 = px.histogram(data_1500_2020, x='year', nbins=100, height=400)
    fig3.update_layout(
    paper_bgcolor='rgba(0,0,0,0)',
    plot_bgcolor='rgba(0,0,0,0)',
    barmode="overlay",
    bargap=0.1,
    bargroupgap=0.2,
    )
    fig3.update_xaxes(
    tickvals = list(range(1930, 2012, 5)),
    ticktext = list(range(1930, 2012, 5))
    )
    # Cambiamos el color de las barras
    for i in range(len(fig.data)):
        fig3.data[i].marker.color = "#d9ad26"
        fig3.data[i].marker.line.width = 1
        fig3.data[i].marker.line.color = "#d9ad26"
    st.plotly_chart(fig3)

    st.caption("""
    En este histograma podemos obsevar la relaci√≥n de descubrimientos de estos cuerpos celestes a lo largo del tiempo.
    est√° filtrado desde el a√±o 1930 por no haber nada relevante los a√±os anteriores. Es el a√±o 2003 el a√±o de mayor n√∫mero
    de descubrimientos, con 3323 meteoritos.
    """)

    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) #L√≠nea

    st.subheader("¬øD√≥nde han ca√≠do todos los meteoritos registrados?")
    # Leemos el mapa de
    path_to_html = "./mapa_espana.html"
    # Read file and keep in variable
    with open(path_to_html,'r') as f: 
        html_data = f.read()

    # Mostramos mapa
    st.components.v1.html(html_data,height=400)    

    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) #L√≠nea

    #Filtrado y gr√°fica de tarta de la distribuci√≥n por hemisferios de la ca√≠da de los meteoritos
    st.subheader("¬øEn qu√© hemisferio hay m√°s tendencia de ca√≠da de meteoritos?")

    df_meteorites['hemisferio'] = np.where((df_meteorites['reclat'] >= 0) & (df_meteorites['reclong'] >= 0), 'Norte-Este',
                            np.where((df_meteorites['reclat'] >= 0) & (df_meteorites['reclong'] < 0), 'Norte-Oeste',
                            np.where((df_meteorites['reclat'] < 0) & (df_meteorites['reclong'] >= 0), 'Sur-Este',
                                     'Sur-Oeste')))

    grouped3 = df_meteorites.groupby('hemisferio').count()['name']
    # Crea una tarta con los datos
    fig4 = px.pie(grouped3, values='name', names=grouped3.index)
    fig4.update_layout(
    paper_bgcolor="rgba(0,0,0,0)", # fondo transparente
    )
    st.plotly_chart(fig4)

    st.caption("""
    Gracias a las coordenadas se ha podido extraer esta clasificaci√≥n por hemisferios para obtener
    un patr√≥n de d√≥nde han sido registrados m√°s meteoritos. Podemos encontrar con diferencia, un mayor volumen en el hemisferio 
    sur, m√°s concretamente en el sureste.
    He de destacar que estos datos no son fieles si lo que queremos es saber d√≥nde han ca√≠do m√°s meteoritos, ya que estas ca√≠das
    coinciden con haber sido encontrados por el ser humano. Es por ello que en zonas poco exploradas apenas hay registros.
    """)





if menu == "Exoplanets":



    ####  Preprocesamiento de exoplanets ----------------------------------------------------------------------------------------------

    # Elijo las variables que me interesan para mi objetivo
    df_exo = df_exo[['Planet Name', 'Discovery Method','Discovery Year', 'Discovery Facility', 'Orbital Period Days',
    'Orbit Semi-Major Axis' , 'Mass', 'Eccentricity', 'Equilibrium Temperature', 'Distance', 'Gaia Magnitude']]


    


    ####  Contenido de exoplanets -----------------------------------------------------------
    
    col1, col2, col3= st.columns(3)
    with col1:
        st.subheader("Exoplanetas descubiertos hasta el 2012:")
        metric_value = "4.575"
        st.markdown(f"""
            <div class="stMetric">
                {metric_value}
            </div>
        """, unsafe_allow_html=True)

    with col2:
        st.subheader("A√±os luz del exoplaneta m√°s cercano:")
        metric_value = "1.30119"
        st.markdown(f"""
            <div class="stMetric">
                {metric_value}
            </div>
        """, unsafe_allow_html=True)

    with col3:
        st.subheader("Temperatura del exoplaneta m√°s caluroso")
        metric_value = "4050 K-3776 ¬∞C"

        st.markdown(f"""
            <div class="stMetric">
                {metric_value}
            </div>
        """, unsafe_allow_html=True)

    # Separaci√≥n
    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea

    #Ponemos el dataframe para poder investigarlo
    st.subheader("Dataframe Exoplanetas")
    st.dataframe(df_exo)



    # Separaci√≥n
    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea
    st.markdown("<p>&nbsp;</p>", unsafe_allow_html=True)

    
    st.subheader("Correlaci√≥n de variables")
    corr = df_exo.corr(method = 'spearman').sort_values(by = 'Discovery Year', axis = 0, ascending = False).sort_values(by = 'Discovery Year', axis = 1, ascending = False).round(1)
    # Generate a mask for the upper triangle
    mask = np.triu(np.ones_like(corr, dtype=bool))

    # Set up the matplotlib figure
    f, ax = plt.subplots(figsize=(10,7))
    f.set_facecolor((0, 0, 0, 0))  # color transparente
    cmap = "coolwarm"
    img = imread(r"imagenes/exoplaneta.jpg")
    # Draw the heatmap with the mask and correct aspect ratio
    sns.heatmap(corr.iloc[0:5,0:5], mask=mask[0:5,0:5], cmap=cmap, vmax=1, center=0,
        square=True ,linewidths=.1, linecolor="black", cbar_kws={"shrink": 0.9},annot = True, annot_kws={"size": 10})
    cbar = ax.collections[0].colorbar
    cbar.set_ticks([-1,0,1])
    cbar.set_ticklabels(["-1","0","1"])
    for t in cbar.ax.get_yticklabels():
        t.set_color("white")
    ax.tick_params(axis='x', labelcolor='white')
    ax.set_xticklabels(ax.get_xticklabels(),fontsize=9 , color='white', rotation= 20)  # Variables blancas
    ax.set_yticklabels(ax.get_yticklabels(),fontsize=9 , color='white', rotation= 70)  # Variables blancas
    plt.imshow(img, zorder=0, extent=[0, 6, 0, 5], origin="lower")
    st.pyplot(f)    

    #Explicaci√≥n Matriz de correlaci√≥n
    st.caption("""
    Se ha usado la matriz de correlaci√≥n de tipo Spearman para analizar la correlaci√≥n de las variables del dataset. 
    √önicamente, las variables "Distancia" y "Magnitud Gaia" tienen una correlaci√≥n significativa. Lo cu√°l, tiene sentido, ya que
    la Magnitud Gaia es un indicador de luminosidad de la estrella anfitriona del exoplaneta. Por ello, cu√°nto m√°s lejos est√© el exoplaneta, 
    m√°s magnitud gaia tendr√°, que significa que la luminosidad ser√° m√°s d√©bil. 
    """)

    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea

    st.subheader("¬øEn qu√© a√±os se han descubierto m√°s exoplanetas?")
    exoplanetas_por_ano = df_exo.groupby("Discovery Year").count().reset_index() 

    fig5 = go.Figure()
    fig5.add_trace(go.Bar(
    x=exoplanetas_por_ano["Discovery Year"],
    y=exoplanetas_por_ano["Planet Name"],
    # name='Exoplanetas por a√±o',
    text=exoplanetas_por_ano["Planet Name"],
    texttemplate="%{y}",
    textposition="outside",
    marker_color="#d9ad26"
    ))
    fig5.update_traces(textfont_color='white')
    fig5.update_layout(
    paper_bgcolor='rgba(0,0,0,0)',
    plot_bgcolor='rgba(0,0,0,0)')
    st.plotly_chart(fig5)
    st.caption("""
        - Aunque el sat√©lite Kepler fue lanzado en marzo de 2009 y ya comenz√≥ a registrar algunos planetas, fue en 2014 cuando se anunci√≥ un gran n√∫mero de descubrimientos de exoplanetas gracias a los datos recopilados por el sat√©lite Kepler en los a√±os anteriores. Este sat√©lite utilizaba el m√©todo de tr√°nsito para detectar planetas fuera de nuestro sistema solar. 
        - En 2016, se anunci√≥ el descubrimiento del exoplaneta m√°s cercano a la Tierra hasta la fecha, llamado Proxima Centauri b, utilizando la t√©cnica de velocidad radial. Este descubrimiento gener√≥ un gran inter√©s en la b√∫squeda de exoplanetas cercanos y habitables. Es por ello que durante este a√±o se invirti√≥ m√°s en este tipo de investigaci√≥n.
    """)

    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea

    st.subheader("¬øExiste alg√∫n patr√≥n entre el descubrimiento de exoplanetas con su Centro o Instalaci√≥n de descubrimiento?")
    df_exo_grouped = df_exo.groupby(["Discovery Year", "Discovery Facility"]).size().reset_index(name="count")
    df_exo_grouped = df_exo_grouped.sort_values(by="count", ascending=False)
    fig8 = px.bar(df_exo_grouped, x="Discovery Year", y="count", color="Discovery Facility", barmode="stack")
    fig8.update_layout(paper_bgcolor='rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)')
    st.plotly_chart(fig8)

    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea

    st.subheader("¬øCu√°l es el Centro de Descubrimiento que m√°s exoplanetas ha descubierto?")
    fig7 = px.pie(df_exo["Discovery Facility"].value_counts().head(5), values=df_exo["Discovery Facility"].value_counts().head(5).values,
    names=df_exo["Discovery Facility"].value_counts().head(5).index)
    fig7.update_layout(paper_bgcolor='rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)')
    st.plotly_chart(fig7)   
    st.caption("""
        El sat√©lite Kepler es la plataforma de descubrimientos m√°s importante. Oper√≥ 9 a√±os, desde 2009 hasta 2018 y durante
        su misi√≥n detect√≥ m√°s de 2600 exoplanetas confirmados, adem√°s de varios miles de candidatos a
        exoplanetas que a√∫n est√°n en proceso de validaci√≥n.
    """)




    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea

    st.subheader("¬øCu√°l fue el primer exoplaneta descubierto?")
    st.dataframe(df_exo[df_exo["Discovery Year"]==1995])

    st.image("imagenes/51pegasib.PNG")

    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea



    st.subheader("¬øCu√°l es el m√©todo de descubrimiento m√°s efectivo?")
    # Contar las ocurrencias de cada m√©todo de descubrimiento
    metodos = df_exo["Discovery Method"].value_counts().reset_index()
    metodos.columns = ["Discovery Method", "Count"]
    # Crear el gr√°fico de embudo
    fig6 = px.funnel(metodos, x="Discovery Method", y="Count", 
    color_discrete_sequence=['#d9ad26'],
    opacity=1,
    template='none')
    fig6.update_layout(paper_bgcolor='rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)',
    font_color='white', xaxis_title="", xaxis_title_standoff=10, xaxis_tickangle=20)
    st.plotly_chart(fig6)

    #Explicaci√≥n gr√°fico funnel del m√©todo de descrubrimiento m√°s efectivo.
    st.caption("""
        Se puede observar que los dos m√©todos m√°s efectivos son el tr√°nsito (Transit) y la velocidad radial (Radial Velocity),
        con un gran n√∫mero de exoplanetas descubiertos utilizando cada uno de ellos.
        - El m√©todo de tr√°nsito se basa en la observaci√≥n de la disminuci√≥n del brillo de una estrella cuando un planeta pasa frente a ella (transita).
        - El m√©todo de velocidad radial se basa en la detecci√≥n de peque√±as fluctuaciones en la velocidad de una estrella causadas por la presencia de un planeta en √≥rbita alrededor de ella.
    """)
    





if menu == "Space Missions":

    #PREPROCESAMIENTO DEL DATASET DE SPACE MISSIONS
    # Importamos Data de las misiones espaciales
    df_missions = pd.read_csv("datasets proyecto final/space_missions.csv",encoding = "ISO-8859-1", skipinitialspace = True)
    df_missions_dictionary = pd.read_csv("datasets proyecto final/space_missions_data_dictionary.csv")


    # Extraemos de Location el pa√≠s y creamos una nueva columna con ello
    df_missions['Country'] = df_missions['Location'].str.extract(r',\s*([A-Za-z ]+)$')

    # Borramos la variable Time, ya que no me aporta demasiada informaci√≥n
    df_missions = df_missions.drop('Time', axis=1)

    # Cambiamos el tipo de columna de object a formato fecha para Date
    df_missions['Date'] = pd.to_datetime(df_missions['Date'], utc=True).dt.date
    df_missions['Date'] = pd.to_datetime(df_missions['Date'])


    # Creamos una copia del dataframe sin valores nulos, para analizar los precios aparte
    df_missions_price = df_missions.dropna()

    # Del nuevo df con el precio limpio, quitamos las "," y hacemos la variable num√©rica
    df_missions_price.Price = df_missions_price.Price.astype(str).str.replace(',', '')
    df_missions_price.Price = pd.to_numeric(df_missions_price.Price)






    # CONTENIDO SPACE MISSIONS -------------------------------------------------------


    col1, col2, col3= st.columns(3)
    with col1:
    
        st.markdown(
        """
        <div style='font-size: 16px; color: #ffffff; font-family: Cabin, sans-serif; font-weight: bold; text-align: center;'>
        Total de misiones espaciales en el dataset:
        """, unsafe_allow_html=True)
        metric_value = "4.630"
        st.markdown(f"""
            <div class="stMetric">
                {metric_value}
            </div>
        """, unsafe_allow_html=True)

    with col2:
        st.markdown(
        """
        <div style='font-size: 16px; color: #ffffff; font-family: Cabin, sans-serif; font-weight: bold; text-align: center;'>
        Tipos de cohetes usados en las misiones: 
        """, unsafe_allow_html=True)
        metric_value = "370"
        st.markdown(f"""
            <div class="stMetric">
                {metric_value}
            </div>
        """, unsafe_allow_html=True)

    with col3:
        st.markdown(
        """
        <div style='font-size: 16px; color: #ffffff; font-family: Cabin, sans-serif; font-weight: bold; text-align: center;'>
        Millones invertidos en las misiones: 
        """, unsafe_allow_html=True)
        metric_value = "162.304"

        st.markdown(f"""
            <div class="stMetric">
                {metric_value}
            </div>
        """, unsafe_allow_html=True)

    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea

    st.subheader("Dataframe Misiones Espaciales")
    st.dataframe(df_missions)

    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea

    # Opciones del selectbox
    options = {
        'Tabla de contingencia cruzada con ["Country" , "MissionStatus"]': 'Seleccionaste la opci√≥n 1',
        'Tabla de contingencia cruzada con ["Rocket" , "MissionStatus"]': 'Seleccionaste la opci√≥n 2'
    }

    st.subheader("¬øExiste relaci√≥n entre el pa√≠s o el tipo de cohete con el √©xito de la misi√≥n?")

    # Mostrar el selectbox en Streamlit
    option_selected = st.selectbox('Selecciona una opci√≥n', list(options.keys()))


    # Mostrar contenido dependiendo de la opci√≥n seleccionada
    if option_selected == 'Tabla de contingencia cruzada con ["Country" , "MissionStatus"]':
        
        df_country_missionstatus = df_missions[['Country', 'MissionStatus']]
        ct = pd.crosstab(df_country_missionstatus['Country'], df_country_missionstatus['MissionStatus'])

        st.image('imagenes\contingencia1.png')
        st.code("chi2, pval, dof, expected = chi2_contingency(ct)")
           
        # muestra el resultado
        st.text("""
        Chi-cuadrado: 744.0847364407593
        p-valor: 4.972397480935078e-117
        """)

        st.caption("""
        El an√°lisis de las variables Country y MissionStatus muestra un valor del chi-cuadrado de 744.08 y
        un p-valor muy peque√±o de 4.97e-117, lo que indica una relaci√≥n significativa entre ambas variables.
        Esto sugiere que la tasa de √©xito de las misiones var√≠a significativamente entre los pa√≠ses en los
        que se realizan las misiones espaciales, lo que puede estar relacionado con factores como la infraestructura,
        la tecnolog√≠a, la inversi√≥n y la experiencia en misiones espaciales.
        """)

    elif option_selected == 'Tabla de contingencia cruzada con ["Rocket" , "MissionStatus"]':
        
        df_country_missionstatus = df_missions[['Rocket', 'MissionStatus']]
        ct = pd.crosstab(df_country_missionstatus['Rocket'], df_country_missionstatus['MissionStatus'])

        st.image('imagenes\contingencia2.png')
        st.code("chi2, pval, dof, expected = chi2_contingency(ct)")


        # muestra el resultado
        st.text("""
        Chi-cuadrado: 31.299732587761305
        p-valor: 0.02657119040683537
        """)

        st.caption("""
        El an√°lisis de relaci√≥n entre las variables Rocket y MissionStatus, muestran un valor del chi-cuadrado es de 31.3 con un p-valor
        de 0.027. Esto significa que existe una relaci√≥n significativa entre la variable Rocket y MissionStatus.
        En otras palabras, el resultado del an√°lisis indica que la proporci√≥n de misiones exitosas y fallidas difiere
        significativamente entre los cohetes utilizados en las misiones.
        """)
        


    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea


    st.subheader("¬øQu√© porcentaje de misiones espaciales ha sido un √©xito y cu√°l es la tasa de fracaso?")


    fig8 = px.pie(df_missions["MissionStatus"].value_counts(), values=df_missions["MissionStatus"].value_counts().values,
    names=df_missions["MissionStatus"].value_counts().index)
    fig8.update_layout(paper_bgcolor='rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)')
    st.plotly_chart(fig8)



    ### CREAMOS BOT√ìN DE M√ÅS INFORMACI√ìN
    # Inicializar el estado de alternancia como falso
    toggle_state = False

    # Crear un bot√≥n que se utiliza para alternar el estado
    if st.button('Ampliar informaci√≥n', key="boton1"):
        toggle_state = not toggle_state

    # Si el estado de alternancia es verdadero, mostrar el texto
    if toggle_state:

        st.markdown(
        """
        <div style='font-size: 14px; color: #ffffff; font-family: Cabin, sans-serif; font-weight: normal; text-align: left;'>
        - Success: La misi√≥n se llev√≥ a cabo seg√∫n lo previsto y se considera un √©xito. <br>
        - Failure: La misi√≥n no se llev√≥ a cabo seg√∫n lo previsto y se considera un fracaso completo.<br>
        - Partial Failure: La misi√≥n se llev√≥ a cabo pero no se cumplieron todas las metas previstas, lo que se considera un fracaso parcial.<br>
        - Prelaunch Failure: El fracaso se produjo antes del lanzamiento, por ejemplo, durante el proceso de preparaci√≥n en tierra, y la misi√≥n nunca se llev√≥ a cabo.
        """, unsafe_allow_html=True)

        # Cambiar el estado de alternancia a falso al volver a hacer clic en el bot√≥n
        if st.button('Ocultar informaci√≥n'):
            toggle_state = False

    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea

    st.subheader("¬øQu√© pa√≠ses ha mandado m√°s misiones y qu√© porcentaje de √©xito tienen?")

    # Creamos el histograma
    fig9= px.histogram(df_missions, x = "Country", color = "MissionStatus", text_auto=True, width=730, height=650)
    # Personalizar la apariencia del gr√°fico
    fig9.update_layout(paper_bgcolor='rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)')
    fig9.update_xaxes(tickangle=45)
    st.plotly_chart(fig9)

    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea

    st.subheader("¬øQu√© compa√±√≠as aeroespaciales han mandado m√°s misiones y qu√© porcentaje de √©xito tienen?")
    # Filtrar el dataframe para incluir solo las 12 compa√±√≠as principales
    top_companies = df_missions['Company'].value_counts().nlargest(12).index.tolist()
    #Creamos el histograma
    fig10 = px.histogram(df_missions[df_missions['Company'].isin(top_companies)], 
                        x='Company', 
                        color='MissionStatus', 
                        text_auto=True, 
                        category_orders={'Company': top_companies}, width=730, height=600)
    fig10.update_layout(paper_bgcolor='rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)')


    st.plotly_chart(fig10)



    ### CREAMOS BOT√ìN DE M√ÅS INFORMACI√ìN
    # Inicializar el estado de alternancia como falso
    toggle_state = False

    # Crear un bot√≥n que se utiliza para alternar el estado
    if st.button('Ampliar informaci√≥n', key="boton2"):
        toggle_state = not toggle_state

    # Si el estado de alternancia es verdadero, mostrar el texto
    if toggle_state:

        st.markdown(
        """
        <div style='font-size: 14px; color: #ffffff; font-family: Cabin, sans-serif; font-weight: normal; text-align: left;'>
        - RVSN USSR: Fuerza de Misiles Estrat√©gicos de la antigua Uni√≥n Sovi√©tica. <br>
        - CASC: Corporaci√≥n de Ciencia y Tecnolog√≠a Aeroespacial de China. <br>
        - Arianespace: Compa√±√≠a francesa que opera servicios de lanzamiento de sat√©lites. <br>
        - General Dynamics: Compa√±√≠a estadounidense que fabrica productos de defensa y tecnolog√≠a. <br>
        - VKS RF: Fuerza Aeroespacial de Rusia. <br>
        - NASA: Agencia espacial estadounidense encargada de programas civiles de exploraci√≥n y investigaci√≥n en el espacio. <br>
        - SpaceX: Compa√±√≠a estadounidense de transporte aeroespacial fundada por Elon Musk. <br>
        - US Air Force: Fuerza A√©rea de los Estados Unidos. <br>
        - ULA: United Launch Alliance, una compa√±√≠a conjunta entre Lockheed Martin y Boeing que proporciona servicios de lanzamiento de sat√©lites. <br>
        - Boeing: Compa√±√≠a estadounidense de aeron√°utica y defensa. <br>
        - Martin Marietta: Compa√±√≠a estadounidense de materiales de construcci√≥n y productos de defensa. <br>
        - Northrop: Northrop Corporation, una compa√±√≠a estadounidense de productos aeroespaciales y de defensa. <br>
        """, unsafe_allow_html=True)

        # Cambiar el estado de alternancia a falso al volver a hacer clic en el bot√≥n
        if st.button('Ocultar informaci√≥n'):
            toggle_state = False


    st.markdown("<hr style='color:#d9ad26;background-color:#d9ad26;height:1px;'/>", unsafe_allow_html=True) # l√≠nea

    st.subheader("Rusia vs USA | La carrera espacial", )


    df_count = df_missions.groupby(['Country', pd.Grouper(key='Date', freq='Y')])['MissionStatus'].count().reset_index()
    df_count = df_count[df_count['Country'].isin(['USA', 'Russia'])]
    df_count.rename(columns={'MissionStatus': 'Count'}, inplace=True)


    fig11 = px.line(df_count, x='Date', y='Count', color='Country', markers= True, color_discrete_sequence= ["#59CCE6", "#d9ad26"])
    fig11.add_annotation(x='1991', y=30, text="Disoluci√≥n de la URSS")
    fig11.add_annotation(x='1969', y=22, text="Llegada a la luna")

    fig11.update_layout(paper_bgcolor='rgba(0,0,0,0)', plot_bgcolor='rgba(0,0,0,0)')

    st.plotly_chart(fig11)











        # st.markdown(
        # """
        # <div style='font-size: 24px; color: #ff5a60; font-family: Helvetica, sans-serif; font-weight: bold;'>
        # En este proyecto nos enfocaremos en comprender mejor la presencia de Airbnb en Madrid.
        # </div>
        # <div style='font-size: 18px; color: #000000; font-family: Arial, sans-serif; font-weight: normal;'>
        # El objetivo ser√° utilizar los datos de la plataforma para analizar tendencias en el n√∫mero de viviendas disponibles, precios, ubicaciones,
        # y c√≥mo estos factores est√°n afectando al mercado del alojamiento en la ciudad.
        # </div>
        # <div style='font-size: 16px; color: #333333; font-family: Verdana, sans-serif; font-weight: normal;'>
        # Por √∫ltimo, se crear√° un modelo predictivo que puede ayudar a los propietarios a establecer precios realistas para sus propiedades.
        # </div>
        # """, unsafe_allow_html=True)
